<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

 <!-- To allow public access by default and to set authentication mode to basic login/password -->
 <security:http>
  <security:anonymous enabled="true" />
  <security:http-basic />
  
 </security:http>

 <!-- To delegate authorization to method calls rather than to urls -->
 <!-- (Thus, we don't need to set any url-interceptor in this conf) -->
 <security:global-method-security pre-post-annotations="enabled" />
 
 <!-- To create user/password with roles -->
 <security:authentication-manager alias="authenticationManager">
  <security:authentication-provider>
    <!--<security:user-service>
    <security:user authorities="ROLE_DUMMY" 
	name="user1" password="strongpassword1" />
   </security:user-service>-->
   <!-- <security:password-encoder hash="sha-256"/> -->
   <security:jdbc-user-service data-source-ref="dataSource" 
            users-by-username-query="
                SELECT username, password ,true
                FROM logincredential WHERE username = ?"

            authorities-by-username-query="
                SELECT username,entityName
                FROM logincredential
                WHERE username = ?"
        /> 
  </security:authentication-provider>
  
 </security:authentication-manager>
 
</beans>
